<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- Uncomment and your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.web"/>  -->

	<context:component-scan base-package="com.firstproj"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/**" location="/resources/" />
    
    <annotation-driven />
<!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
<!-- 	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--        		<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />	         -->
<!-- 	        <beans:property name="prefix" value="/WEB-INF/view/"/> -->
<!-- 	        <beans:property name="suffix" value=".jsp"/> -->
<!-- 	</beans:bean> -->

    <!-- jsonView -->
    <beans:bean id="jsonViewer" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
        <beans:property name="extractValueFromSingleKeyModel" value="true" />
    </beans:bean>
    
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>classpath:tiles/tiles-definition.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>   

   <!-- Resolver 0 -->
    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <beans:property name="order" value="0" />
        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="json"    value="application/json" /> 
                <beans:entry key="jsonp"  value="application/javascript" />
                <beans:entry key="xml"    value="application/xml" />
            </beans:map>
        </beans:property>

         <beans:property name="viewResolvers">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
                </beans:bean>
            </beans:list>
        </beans:property>
        
        <beans:property name="defaultViews">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                   <beans:property name="extractValueFromSingleKeyModel" value="true" />
                   <beans:property name="contentType" value="application/json" />
                </beans:bean> 
                 
                <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                   <beans:property name="extractValueFromSingleKeyModel" value="true" />
                   <beans:property name="contentType" value="application/javascript" />
                </beans:bean>
                
                <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                    <beans:property name="contentType" value="application/xml" />
                </beans:bean>
                
                
            </beans:list>
        </beans:property>
        
        <beans:property name="ignoreAcceptHeader" value="true" />
    </beans:bean>     
    
    <beans:bean id="bnViewResolver"  class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <beans:property name="order" value="1" />
    </beans:bean>   
    
    <beans:bean  id="tilesViewResolver" class="org.springbyexample.web.servlet.view.tiles2.TilesUrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springbyexample.web.servlet.view.tiles2.DynamicTilesView"/>
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
        <beans:property name="tilesDefinitionName" value="default"/>
        <beans:property name="tilesBodyAttributeName" value="body"/>
        <beans:property name="tilesDefinitionDelimiter" value="."/>
        <beans:property name="order" value="2" />
    </beans:bean>
    
    <!-- Resolver 3rd -->
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
        <beans:property name="order" value="3" />
    </beans:bean>
    
</beans:beans>
