<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc 
    	http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd">

    <interceptors>
		<interceptor>  
			<mapping path="/**/*" />
			<beans:bean class="com.firstproj.interceptor.AuthenticationInterceptor" />
		</interceptor>
	</interceptors>    

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/**" location="/resources/" /> -->
	<resources mapping="/css/**" location="/resources/css/" />
    <resources mapping="/js/**" location="/resources/js/" />
    <resources mapping="/img/**" location="/resources/img/" />
    <resources mapping="/fonts/**" location="/resources/css/fonts/" />
	

	<default-servlet-handler />
	<annotation-driven />
    <aop:aspectj-autoproxy />    
    <context:annotation-config />
     
    <context:component-scan base-package="com.firstproj"/>    
    <beans:bean class="com.firstproj.common.interceptor.RequestInterceptor" />

    <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
    	<beans:property name="order" value="0"/>
    </beans:bean>      
              
   <!-- Resolver 0 -->
    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <beans:property name="order" value="1" />
        <beans:property name="contentNegotiationManager">
            <beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
                <beans:property name="mediaTypes">
                    <beans:value>
                        htm=text/html;charset=UTF-8
                        html=text/html;charset=UTF-8
                        json=application/json;charset=UTF-8
                        jsonp=application/javascript;charset=UTF-8
                        xml=application/xml;charset=UTF-8
                    </beans:value>
                </beans:property>
            </beans:bean>
        </beans:property>
         <beans:property name="viewResolvers">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
                </beans:bean>           
            </beans:list>
        </beans:property>
        <beans:property name="defaultViews">
            <beans:list>
				<!-- JSON View -->
				<beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
				<!-- JSONP View  -->
                <beans:bean class="com.firstproj.resolver.MappingJacksonJsonpView">
                   <beans:property name="extractValueFromSingleKeyModel" value="true" />
                   <beans:property name="contentType" value="application/javascript" />
                </beans:bean>
				<!-- XML View -->
                <beans:bean class="com.firstproj.resolver.MappingXmlView">
                    <beans:property name="contentType" value="application/xml" />
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>  
 
    <!-- Resolver 3rd -->
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
        <beans:property name="order" value="2" />
        <beans:property name="contentType" value="text/html; charset=UTF-8"/>
    </beans:bean>
    
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/config/tiles/tiles-definition.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>   
    
    <!-- Redis -->
<!--     <beans:bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
<!-- 	    <beans:property name="hostName" value="127.0.0.xx" /> -->
<!-- 	    <beans:property name="port" value="6379" /> -->
<!-- 	    <beans:property name="password" value="123456" /> -->
<!-- 	    <beans:property name="usePool" value="true" />  -->
<!-- 	    <beans:property name="database" value="0"/>    -->
<!--     </beans:bean> -->
<!--     <beans:bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> -->
<!-- 	    <beans:property name="connectionFactory" ref="jedisConnFactory" /> -->
<!-- 	</beans:bean> -->
    
 
<!--   <beans:bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" -->
<!--         > -->
<!--         <beans:property name="hostName" value="127.0.0.xx" /> -->
<!--         <beans:property name="port" value="6379" /> -->
<!--         <beans:property name="password" value="123456" /> -->
<!--         <beans:property name="usePool" value="true" />   -->
<!--   </beans:bean>       -->
  
  <!-- redis template definition -->
<!--   <beans:bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" -->
<!--     p:connection-factory-ref="jedisConnectionFactory"/>  -->
  
	<beans:bean id="fileUpload" class="com.firstproj.common.util.FileUpload">
		<beans:property name="destinationUrl" value="/uploadfiles" />
		<beans:constructor-arg>
			<beans:ref bean="servletContext" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<beans:property name="maxUploadSize" value="20971520" />	<!--  20 M -->
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
    
    <beans:bean id="jacksonMessageConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></beans:bean>
    <beans:bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jacksonMessageConverter" />
            </beans:list>
        </beans:property>
    </beans:bean>
</beans:beans>
