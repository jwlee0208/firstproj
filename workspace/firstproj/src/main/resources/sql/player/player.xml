<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="sql.player">		
		<select id="selectCategoryAttrElemMapList" parameterType="player.categoryAttrElemMapDto" resultType="player.categoryAttrElemMapDto">
			<include refid="selectAttrElemMapDefault"/>
		</select>
		<!--  카테고리 조회 -->
		<select id="selectCategoryList" parameterType="player.categoryDto" resultType="player.categoryDto">
			SELECT 	
					cat_id
				  , parent_cat_id
				  , cat_name
			FROM TB_CATEGORY 
			WHERE 1 = 1
			 <choose>
			 	<when test="parentCatId > 0">
			  AND parent_cat_id = #{parentCatId}
			 	</when>
				<otherwise>
			  AND parent_cat_id = 0	
				</otherwise>			 
			 </choose>
		</select>	

		
		<select id="selectCategoryAttrElemList" parameterType="player.categoryAttrDto" resultMap="categoryAttrElemListMap">
			SELECT 
				    a.attr_id	
				  , a.attr_name
				  , ae.attr_elem_id
				  , ae.attr_elem_name 
			FROM 		TB_ATTR 	 a 
			LEFT JOIN 	TB_ATTR_ELEM ae ON a.attr_id = ae.attr_id
			WHERE a.cat_id = #{catId} 
		</select>
		
		<resultMap id="categoryAttrElemListMap" type="player.categoryAttrDto">
			<id column="attr_id" property="attrId"/>
			<result column="attr_name" property="attrName"/>
			<collection property="categoryAttrElemList" ofType="player.categoryAttrElemDto">
				<id column="attr_elem_id" property="attrElemId"/>
				<result column="attr_elem_name" property="attrElemName"/>
			</collection>
		</resultMap> 
		
		<!-- 페이징 위한 리스트 갯수 조회 -->    
		<select id="selectListCount" resultType="Integer" parameterType="player.searchConditionPlayer">        
			SELECT count(*) AS totalCnt         
			FROM 		TB_ATTR 			a 		
			LEFT JOIN 	TB_ATTR_ELEM 		ae 		ON a.attr_id = ae.attr_id
			LEFT JOIN 	TB_ATTR_ELEM_MAP  	aem 	ON ae.attr_elem_id = aem.attr_elem_id
        
			<include refid="searchConditionSql"/>    
			<!-- 
			order by null의 사용으로 filesort작업 제거 
			ref.] http://papamake.tistory.com/118
				  http://beautijeon.tistory.com/1458
				  http://www.mysqlkorea.com/sub.html?mcode=manual&scode=01&m_no=21460&cat1=7&cat2=217&cat3=238&lang=k 
			-->
			ORDER BY null	
		</select>          
		
		<!-- 리스트 조회 -->    
		<select id="selectBoardList" resultType="player.categoryAttrElemMapDto" parameterType="player.searchConditionPlayer">                      
			<include refid="selectAttrElemMapDefault"/>                     
			<include refid="searchConditionSql"/>                         
			ORDER BY aem.create_date desc                
			LIMIT #{startRow}, #{endRow}     
		</select>		
		
		<select id="checkIsRegisted" resultType="Integer" parameterType="user.userDto">
			SELECT count(*) 
			FROM TB_PLAYER_INFO 
			WHERE user_id = #{userId}
		</select>
		
		<!-- 페이징 위한 playerInfo 리스트 갯수 조회 -->    
		<select id="selectPlayerListCount" resultType="Integer" parameterType="player.searchConditionPlayer">        
			SELECT count(*) 
			FROM (
			<include refid="selectPlayerListDefault"/>
			<include refid="searchConditionPlayerSql"/>    
			) as count
			<!-- 
			order by null의 사용으로 filesort작업 제거 
			ref.] http://papamake.tistory.com/118
				  http://beautijeon.tistory.com/1458
				  http://www.mysqlkorea.com/sub.html?mcode=manual&scode=01&m_no=21460&cat1=7&cat2=217&cat3=238&lang=k 
			-->
			ORDER BY null	
		</select>      
		
		<select id="selectPlayerListCount2" resultType="Integer" parameterType="player.searchPlayerDto">        
			SELECT count(*) 
			FROM (
			<include refid="selectPlayerListDefault"/>
			<include refid="searchConditionPlayerSql2"/>    
			) as count
			<!-- 
			order by null의 사용으로 filesort작업 제거 
			ref.] http://papamake.tistory.com/118
				  http://beautijeon.tistory.com/1458
				  http://www.mysqlkorea.com/sub.html?mcode=manual&scode=01&m_no=21460&cat1=7&cat2=217&cat3=238&lang=k 
			-->
			ORDER BY null	
		</select>      
		
		<!-- playerInfo 리스트 조회 -->
		<select id="selectPlayerList" resultMap="playerListMap" parameterType="player.searchConditionPlayer">
			<include refid="selectPlayerListDefault"/>			
			<include refid="searchConditionPlayerSql"/>     
			ORDER BY U.user_nm desc	
			LIMIT #{startRow}, #{endRow}  
		</select>

		<select id="selectPlayerList2" resultMap="playerListMap" parameterType="player.searchPlayerDto">
			<include refid="selectPlayerListDefault"/>			
			<include refid="searchConditionPlayerSql2"/>     
			ORDER BY U.user_nm desc	
			LIMIT #{fetchScale}, #{listSize}  
		</select>
		
		<resultMap 	id="playerListMap" 	type="player.playerInfoDto">
			<id 	column="player_info_id" 	property="playerInfoId"/>
			<result column="catId1" 			property="catId1"/>
			<result column="catId2" 			property="catId2"/>
			<result column="catNm1" 			property="catNm1"/>
			<result column="catNm2" 			property="catNm2"/>
			<result column="profileImgFilePath" property="profileImgFilePath"/>
			<result column="introduce"			property="introduce"/>
			<association 	property="userInfo" javaType="user.userDto">
				<id 		column="user_id" 	property="userId"/>
				<result 	column="userNm" 	property="userNm"/>			
				<result 	column="email" 		property="email"/>
				<result 	column="phone_no" 	property="phoneNo"/>
				<result 	column="join_date" 	property="joinDate"/>
			</association>
		</resultMap>
		
		
		<!-- playerInfo 검색 리스트 조회 -->
		<select id="selectSearchCountListPerCategory" resultType="player.playerInfoSearchDto" parameterType="player.searchConditionPlayer">
			SELECT 
					c1.cat_id 			as catId1
				  , c1.cat_name 		as catNm1
				  , c2.cat_id 			as catId2
				  , c2.cat_name 		as catNm2
				  , count(pi.user_id) 	as searchCntPerCat
			FROM TB_PLAYER_INFO 	pi
			LEFT JOIN TB_USER 		u 	ON u.user_id = pi.user_id 
			LEFT JOIN TB_CATEGORY 	c1 	ON c1.cat_id = pi.cat_id1
			LEFT JOIN TB_CATEGORY 	c2 	ON c2.cat_id = pi.cat_id2
			WHERE 1 = 1
			<if test='searchCondition == "userName"'>
				<if test='searchText != null and searchText != ""'>
<!-- 			  and u.user_nm like CONCAT('%', #{searchText}, '%') -->
				AND MATCH(u.user_nm) AGAINST(CONCAT('*', #{searchText}, '*') in boolean mode)
			  	</if>
			</if>  	
			GROUP BY c1.cat_id, c1.cat_name, c2.cat_id, c2.cat_name
			ORDER BY u.user_nm
		</select>
		
		
		<!-- autoComplete -->
		<select id="selectAutoComplete" resultType="String" parameterType="player.searchConditionPlayer">
			SELECT user_nm 
			FROM TB_USER u
			LEFT JOIN TB_PLAYER_INFO pi ON pi.user_id = u.user_id
			where 1 = 1
<!-- 			and u.user_nm like concat('%', #{searchText}, '%') -->
				AND MATCH(u.user_nm) AGAINST(CONCAT('*', #{searchText}, '*') in boolean mode)
			ORDER BY user_nm
		</select>
		
		
		<sql id="selectAttrElemMapDefault">
			SELECT a.cat_id
				 , a.attr_id
				 , a.attr_name
				 , ae.attr_elem_id
				 , ae.attr_elem_name
				 , aem.user_id
				 , aem.user_name
				 , aem.attr_elem_map_id
				 , aem.attr_elem_map_name 
				 , aem.create_date
			FROM 		TB_ATTR 			a 						
			INNER JOIN 	TB_ATTR_ELEM 		ae 		ON a.attr_id = ae.attr_id
			INNER JOIN 	TB_ATTR_ELEM_MAP  	aem 	ON ae.attr_elem_id = aem.attr_elem_id
			INNER JOIN  TB_USER				u		ON aem.user_id = u.user_id		
		</sql>
		
				<!-- 페이징 처리를 위한 검색 조건 -->
		<sql id="searchConditionSql">
			WHERE 1 = 1
				<if test='searchCondition == "userName"'>
					<if test='searchText != null and searchText != ""'>
				AND aem.user_name 	LIKE CONCAT('%', #{searchText}, '%')
					</if> 
				</if>
				<if test="catId > 0">
				AND a.cat_id = #{catId}    
				</if>
				
			<if test="catAttrElemInfos != null">
				<foreach collection="catAttrElemInfos" item="parentAttribute">
					<if test="parentAttribute.childCatAttrElemInfos != null">
				AND 
					EXISTS (SELECT 1 
							FROM TB_ATTR_ELEM_MAP aem
							JOIN TB_ATTR_ELEM     ae
							WHERE aem.attr_elem_id 	= ae.attr_elem_id
							  AND aem.user_id 		= u.user_id
							  AND ae.attr_id 		= #{parentAttribute.attrId}
							  AND aem.attr_elem_id  IN 
							<foreach collection="parentAttribute.childCatAttrElemInfos" item="childAttribute" separator="," open="(" close=")">
								#{childAttribute.attrElemId}
							</foreach>	  
							)
					
					</if>
				</foreach>
			</if>					
				
<!-- 				<if test="attrId > 0"> -->
<!-- 				and a.attr_id = #{attrId}     -->
<!-- 				</if> -->
<!-- 				<if test="attrElemId != null"> -->
<!-- 				and ae.attr_elem_id in  -->
				
<!-- 					<foreach item="item" index="index" collection="attrElemId" -->
<!-- 					      open="(" separator="," close=")"> -->
<!-- 					        #{item} -->
<!-- 					</foreach>				     -->
<!-- 				</if>    -->
<!-- 				and aem.attr_elem_map_id > 0  	     -->
		</sql> 
		
		<!-- 페이징 처리를 위한 검색 조건2 -->
		<sql id="searchConditionSql2">
			WHERE 1 = 1
				<if test='searchCondition == "userName"'>
					<if test='searchText != null and searchText != ""'>
					AND aem.user_name 	like CONCAT('%', #{searchText}, '%')
					</if> 
				</if>
				<if test="catId1 > 0">
				AND a.cat_id = #{catId1}    
				</if>
				<if test="catId2 > 0">
				AND a.cat_id = #{catId2}    
				</if>
				
<!-- 				<if test="attrId > 0"> -->
<!-- 				and a.attr_id = #{attrId}     -->
<!-- 				</if> -->
<!-- 				<if test="attrElemId != null"> -->
<!-- 				and ae.attr_elem_id in  -->
				
<!-- 					<foreach item="item" index="index" collection="attrElemId" -->
<!-- 					      open="(" separator="," close=")"> -->
<!-- 					        #{item} -->
<!-- 					</foreach>				     -->
<!-- 				</if>    -->
				AND aem.attr_elem_map_id > 0  	    
		</sql> 

		<sql id="searchConditionPlayerSql">
			WHERE 1 = 1
					<if test='searchCondition == "userName"'>
						<if test='searchText != null and searchText != ""'>
<!-- 						and aem.user_name 	like CONCAT('%', #{searchText}, '%') -->
<!-- 							and u.user_nm 	like CONCAT('%', #{searchText}, '%') -->
				AND MATCH(u.user_nm) AGAINST(CONCAT('*', #{searchText}, '*') in boolean mode)
						</if> 
					</if>
			
				
				<if test="catId > 0">
				AND (pi.cat_id1 = #{catId} 
				  OR pi.cat_id2 = #{catId} 
				  OR pi.cat_id2 in (SELECT cat_id 
				  				    FROM TB_CATEGORY 
				  				    WHERE parent_cat_id = #{catId}))    
				</if>
				
			<if test="catAttrElemInfos != null">
				<foreach collection="catAttrElemInfos" item="parentAttribute">
					<if test="parentAttribute.childCatAttrElemInfos != null">
				AND 
					EXISTS (SELECT 1 
							FROM TB_ATTR_ELEM_MAP aem
							JOIN TB_ATTR_ELEM     ae
							WHERE aem.attr_elem_id 	= ae.attr_elem_id
							  AND aem.user_id 		= u.user_id
							  AND ae.attr_id 		= #{parentAttribute.attrId}
							  AND aem.attr_elem_id  IN 
							<foreach collection="parentAttribute.childCatAttrElemInfos" item="childAttribute" separator="," open="(" close=")">
								#{childAttribute.attrElemId}
							</foreach>	  
							)
					
					</if>
				</foreach>
			</if>				
				
				
<!-- 				<if test="attrId > 0"> -->
<!-- 				and a.attr_id = #{attrId}     -->
<!-- 				</if> -->
<!-- 				<if test="attrElemId != null"> -->
<!-- 					   and aem.attr_elem_id in  -->
<!-- 					<foreach item="item" index="index" collection="attrElemId" -->
<!-- 					      open="(" separator="," close=")"> -->
<!-- 					        #{item} -->
<!-- 					</foreach> -->
<!-- 				</if>  -->
				GROUP BY pi.user_id
<!-- 				GROUP BY pi.player_info_id, U.user_nm, pi.cat_id1, c1.cat_name, c2.cat_id, c2.cat_name	    	     -->
		</sql> 

		<!-- playerInfo 페이징 처리를 위한 검색 조건 -->
		<sql id="searchConditionPlayerSql2">
			<where>
					<if test='searchCondition == "userName"'>
						<if test='searchText != null and searchText != ""'>
<!-- 						and aem.user_name 	like CONCAT('%', #{searchText}, '%') -->
<!-- 							and u.user_nm 	like CONCAT('%', #{searchText}, '%') -->
				AND MATCH(u.user_nm) AGAINST(CONCAT('*', #{searchText}, '*') in boolean mode)
						</if> 
					</if>
			
				
				<if test="categoryInfo.parentCatId > 0">
				AND (pi.cat_id1 = #{categoryInfo.parentCatId}  
				  OR pi.cat_id2 IN (select cat_id 
				  				    from TB_CATEGORY 
				  				    where parent_cat_id = #{categoryInfo.parentCatId}))    
				</if>
				<if test="categoryInfo.catId > 0">
				AND pi.cat_id2 = #{categoryInfo.catId}
				</if>
			<if test="catAttrElemInfos != null">
				<foreach collection="catAttrElemInfos" item="parentAttribute">
					<if test="parentAttribute.childCatAttrElemInfos != null">
				AND 
					EXISTS (SELECT 1 
							FROM TB_ATTR_ELEM_MAP aem
							JOIN TB_ATTR_ELEM     ae
							WHERE aem.attr_elem_id 	= ae.attr_elem_id
							  AND aem.user_id 		= u.user_id
							  AND ae.attr_id 		= #{parentAttribute.attrId}
							  AND aem.attr_elem_id  IN 
							<foreach collection="parentAttribute.childCatAttrElemInfos" item="childAttribute" separator="," open="(" close=")">
								#{childAttribute.attrElemId}
							</foreach>	  
							)
					
					</if>
				</foreach>
			</if>				
			</where>		
<!-- 				<if test="attrId > 0"> -->
<!-- 				and a.attr_id = #{attrId}     -->
<!-- 				</if> -->
<!-- 				<if test="attrElemId != null"> -->
<!-- 					   and aem.attr_elem_id in  -->
<!-- 					<foreach item="item" index="index" collection="attrElemId" -->
<!-- 					      open="(" separator="," close=")"> -->
<!-- 					        #{item} -->
<!-- 					</foreach> -->
<!-- 				</if>  -->
				GROUP BY pi.user_id
<!-- 				GROUP BY pi.player_info_id, U.user_nm, pi.cat_id1, c1.cat_name, c2.cat_id, c2.cat_name	    	     -->
		</sql> 

		<sql id="selectPlayerListDefault">
			SELECT 
					pi.player_info_id
				  , pi.user_id
				  , U.user_nm	as userNm
				  , pi.cat_id1  as catId1
				  , c1.cat_name as catNm1
				  , pi.cat_id2  as catId2
				  , c2.cat_name as catNm2 
				  , pi.profile_img_file_path as profileImgFilePath
				  , pi.introduce
			FROM TB_PLAYER_INFO 		pi
			LEFT JOIN TB_USER 			U 		ON pi.user_id 		= U.user_id	
			LEFT JOIN TB_CATEGORY 		c1 		ON pi.cat_id1 		= c1.CAT_ID
			LEFT JOIN TB_CATEGORY 		c2 		ON pi.CAT_ID2 		= c2.CAT_ID
			LEFT JOIN TB_ATTR_ELEM 		ae 		ON pi.cat_id2 		= ae.cat_id
			LEFT JOIN TB_ATTR_ELEM_MAP 	aem 	ON ae.attr_elem_id 	= aem.attr_elem_id 
										  	   and pi.user_id 		= aem.user_id
		</sql>
		
		<insert id="insertPlayerInfo" parameterType="player.playerInfoDto" useGeneratedKeys="true" keyProperty="playerInfoId">
			INSERT INTO TB_PLAYER_INFO 
				(user_id, cat_id1, cat_id2, introduce
				, profile_img_file_path
				, profile_img_name
				)
			VALUES
				(#{userId}, #{catId1}, #{catId2}, #{introduce}
				, IFNULL(#{profileImgFilePath}, ''), IFNULL(#{profileImgName}, '')
				)
<!-- 			<selectKey keyProperty="playerInfoId" resultType="int"> -->
<!-- 				SELECT LAST_INSERT_ID -->
<!-- 			</selectKey>	 -->
		</insert>
				
		<insert id="insertCategoryAttrElemMapInfo" parameterType="player.categoryAttrElemDto" useGeneratedKeys="true" keyProperty="attrElemMapId">
			INSERT INTO TB_ATTR_ELEM_MAP
				(attr_id,
				attr_elem_id,
				cat_id,
				user_id,
				user_name,
				attr_elem_map_name,
				create_date,
				create_user_id,
				create_user_name)
			VALUES
				(#{attrId},
				#{attrElemId},
				#{catId},
				#{userId},
				#{userName},
				#{attrElemMapName},
				now(),
				#{createUserId},
				#{createUserName})
		</insert>	
		
		<insert id="insertPlayerVideoLinkInfo" parameterType="player.playerVideoLinkDto" useGeneratedKeys="true" keyProperty="playerVideoLinkId">
			INSERT INTO TB_PLAYER_VIDEO_LINK
				(player_info_id, link_url)
			VALUES 
				(#{playerInfoId}, #{linkUrl})
		</insert>
		
		<!-- player detail info -->
		<select id="selectPlayerInfoDetail" parameterType="user.userDto" resultMap="playerDetailMap">
			SELECT
			        pi.player_info_id
			      , pi.profile_img_file_path 
			      , pi.profile_img_name 
				  , u.user_id
				  , u.user_nm
				  , u.email
				  , u.phone_no
				  , cat1.cat_id 	as catId1
				  , cat1.cat_name 	as catNm1
				  , cat2.cat_id 	as catId2
				  , cat2.cat_name 	as catNm2
				  , ae.attr_elem_id
				  , ae.attr_elem_name
				  , pvl.link_url
				  , pi.introduce  
			FROM TB_USER u
			INNER JOIN TB_PLAYER_INFO 	   		pi 		ON u.user_id 		 = pi.user_id
			LEFT  JOIN TB_PLAYER_VIDEO_LINK 	pvl 	ON pi.player_info_id = pvl.player_info_id
			LEFT  JOIN TB_ATTR_ELEM_MAP 		aem 	ON pi.user_id 		 = aem.user_id
			INNER JOIN TB_CATEGORY 				cat1 	ON pi.cat_id1 		 = cat1.cat_id
			INNER JOIN TB_CATEGORY 				cat2 	ON pi.cat_id2 		 = cat2.cat_id
			INNER JOIN TB_ATTR_ELEM 			ae  	ON aem.attr_elem_id  = ae.attr_elem_id
			WHERE u.user_id = #{userId}		
		</select>
		
		<resultMap type="player.playerInfoDto" id="playerDetailMap">
			<id 	column="player_info_id" 		property="playerInfoId"/>
			<id 	column="user_id" 				property="userId"/>
			<result column="profile_img_file_path" 	property="profileImgFilePath"/>
			<result column="profile_img_name" 		property="profileImgName"/>
			<result column="catId1" 				property="catId1"/>
			<result column="catNm1" 				property="catNm1"/>
			<result column="catId2" 				property="catId2"/>
			<result column="catNm2" 				property="catNm2"/>
			<result column="introduce" 				property="introduce"/>
			<association property="userInfo" javaType="user.userDto">
				<id 		column="user_id" 	property="userId"/>
				<result 	column="user_nm" 	property="userNm"/>
				<result 	column="email" 		property="email"/>
				<result 	column="phone_no" 	property="phoneNo"/>
			</association>
			<collection property="playerVideoLinkList" 	ofType="player.playerVideoLinkDto">
				<id 	column="player_info_id" property="playerInfoId"/>
				<result column="link_url" 		property="linkUrl"/>
			</collection>
			<collection property="categoryAttrElemList" ofType="player.categoryAttrElemDto">
				<id		column="attr_elem_id"	property="attrElemId"/>
				<result column="attr_elem_name" property="attrElemName"/>
			</collection>
		</resultMap>
		
		<!-- 등록한 사용자인지 아닌지 체크 -->
		<select id="selectIsRegistedPlayer" parameterType="user.userDto" resultType="user.userDto">
			SELECT DISTINCT user_id 
			from TB_PLAYER_INFO 
			WHERE user_id = #{userId}
		</select>

		<delete id="deletePlayerVideoLinkInfo" parameterType="player.playerInfoDto">
			DELETE FROM TB_PLAYER_VIDEO_LINK WHERE player_info_id = #{playerInfoId}
		</delete>

		<delete id="deletePlayerElemMapInfo" parameterType="player.playerInfoDto">
			DELETE FROM TB_ATTR_ELEM_MAP WHERE user_id = #{userId}
		</delete>
		
		<delete id="deleteRegistedPlayerInfo" parameterType="player.playerInfoDto">
			DELETE FROM TB_PLAYER_INFO WHERE user_id = #{userId} 
		</delete>
		
		
		<update id="updatePlayerInfo" parameterType="player.playerInfoDto">
			UPDATE TB_PLAYER_INFO 
				SET cat_id1				  = #{catId1}		
				  , cat_id2 			  = #{catId2}
				  , introduce			  = #{introduce}
				  , profile_img_file_path = IFNULL(#{profileImgFilePath}, '')
				  , profile_img_name 	  = IFNULL(#{profileImgName}, '')
			WHERE player_info_id = #{playerInfoId}
		</update>
				
		<update id="updateCategoryAttrElemMapInfo" parameterType="player.categoryAttrElemDto">
			UPDATE TB_ATTR_ELEM_MAP
				SET attr_elem_id 		= #{attrElemId}
				  , cat_id		 		= #{catId}
				  , attr_elem_map_name  = #{attrElemMapName}
			WHERE 
				  user_id = #{userId}
			  AND attr_id = #{attrId}	 	  
		</update>	
		
		<update id="updatePlayerVideoLinkInfo" parameterType="player.playerVideoLinkDto">
			UPDATE TB_PLAYER_VIDEO_LINK
				 SET link_url = #{linkUrl}
			WHERE  
				 player_info_id = #{playerInfoId}
		</update>
		
    </mapper>