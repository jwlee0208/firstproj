<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="sql.boardArticle">
        <insert id="insertArticleInfo" parameterType="board.boardArticleDto" useGeneratedKeys="true" keyProperty="articleId">
            INSERT INTO TB_BOARD_ARTICLE
				(
				board_id,
				title,
				content,
				file_path,
				original_file_name,
				author_id,
				author_nm,
				create_date,
				status)
			VALUES (
				#{boardId},
				#{title },
				#{content },
				#{filePath},
				#{originalFileName},
				#{authorId },
				#{authorNm },
				CURRENT_TIMESTAMP(),
				#{status})
        </insert>
        <select id="selectList" parameterType="board.boardArticleDto" resultType="board.boardArticleDto">
            <include refid="searchSql"/>   
            <where>
				<include refid="searchConditionSql"/>
			</where>
			ORDER BY article_id desc        
        </select>
		<!-- 페이징 위한 리스트 갯수 조회 -->    
		<select id="selectListCount" resultType="Integer" parameterType="searchCondition">        
			SELECT count(*) AS totalCnt         
			FROM TB_BOARD_ARTICLE ba   
			<where>     
				<include refid="searchConditionSql"/>    
			</where>
		</select>      
		
		<!-- 리스트 조회 -->    
		<select id="selectBoardList" resultType="board.boardArticleDto" parameterType="searchCondition">                      
			<include refid="searchSql"/>  
			<where>                    
				<include refid="searchConditionSql"/>
			</where>                         
			ORDER BY article_id desc                
			LIMIT #{startRow}, #{endRow}     
		</select>		
		
		<!--  게시글 조회 -->
		<select id="selectBoardContent" resultType="board.boardArticleDto" parameterType="board.boardArticleDto">
		    <include refid="searchSql"/>
		    <include refid="searchContentSql"/>
		</select>
		<!-- 이전 글 조회 -->
		<select id="selectPrevBoardContent" resultType="board.boardArticleDto" parameterType="board.boardArticleDto">
		 	 <include refid="searchSql"/>  
				where
					board_id = ${boardId}	
				<![CDATA[ 
					and article_id > ${articleId}
				]]>
					and status = 1
				order by article_id asc
				limit 1	 	 		    
		</select>
		<!-- 다음 글 조회 -->
		<select id="selectNextBoardContent" resultType="board.boardArticleDto" parameterType="board.boardArticleDto">
		 	 <include refid="searchSql"/>  
				where 
					board_id = ${boardId}
				<![CDATA[ 
					and article_id < ${articleId}
				]]>	
					and status = 1
				order by article_id desc
				limit 1	 	 		    
		</select>
		
		
					
		<sql id="searchSql">
			SELECT 
			    ba.article_id,
			    ba.board_id,
			    ba.title,
			    ba.content,
			    ba.file_path, 
			    ba.original_file_name,
			    ba.author_id,
			    ba.author_nm,
			    ba.create_date,
			    bc.board_category_id,
			    bc.board_category_name
			FROM TB_BOARD_ARTICLE ba
			INNER JOIN TB_BOARD b 			ON b.board_id = ba.board_id
			INNER JOIN TB_BOARD_CATEGORY bc ON b.board_category_id = bc.board_category_id
		</sql>
		<sql id="searchConditionSql">
				<if test="boardId > 0">
				and ba.board_id = #{boardId}    
				</if>
				<if test="searchCondition != null and searchCondition != ''">
					<if test="searchCondition == 'title'">
						<if test="searchText != null and searchText != ''">
<!-- 						and MATCH(title) AGAINST(CONCAT('*',#{searchText},'*') in boolean mode); -->
						and title 	like CONCAT('%', #{searchText}, '%')
						</if> 
					</if>
					<if test="searchCondition == 'content'">
						<if test="searchText != null and searchText != ''">
<!-- 						and MATCH(content) AGAINST(CONCAT('*',#{searchText},'*') in boolean mode); -->
						and content like CONCAT('%', #{searchText}, '%')
						</if>
					</if>
					<if test="searchCondition == 'titleNcontent'">
						<if test="searchText != null and searchText != ''">
<!-- 						and MATCH(title, content) AGAINST(CONCAT('*',#{searchText},'*') in boolean mode); -->
						and (title 	 like CONCAT('%', #{searchText}, '%') 
						     or 
						     content like CONCAT('%', #{searchText}, '%'))
						</if>     
					</if>
				</if>
				and status = 1			     	    
		</sql> 
		<sql id="searchContentSql">
		    WHERE 1 = 1
		    <if test="articleId > 0">
		        and article_id = #{articleId}
		        and status = 1
		    </if>
		    
		</sql>
		
		
		<!-- 5개의 게시글 조회 -->    
		<select id="selectArticleFive" resultType="board.boardArticleDto" parameterType="board.boardArticleDto">                      
			<include refid="searchSql"/>              
			<where>
				<if test="boardId > 0">
				and board_id = #{boardId}    
				</if>			
				and status = 1
			</where>	
			        
<!-- 			<include refid="searchConditionSql"/>                          -->
			ORDER BY article_id desc                
			LIMIT 0, 5     
		</select>		
		
		<!-- 게시글 수정 -->
		<update id="updateArticleInfo" parameterType="board.boardArticleDto">
			UPDATE TB_BOARD_ARTICLE
				SET
					article_id 			= #{articleId },
					board_id 			= #{boardId },
					title 				= #{title },
					content 			= #{content },
					file_path 			= #{filePath },
					original_file_name 	= #{originalFileName },
					author_id 			= #{authorId },
					author_nm 			= #{authorNm }
			WHERE article_id = #{articleId}		
		</update>
		<!-- 게시글 삭제 -->		
		<update id="deleteArticleInfo" parameterType="board.boardArticleDto">
			UPDATE TB_BOARD_ARTICLE
				SET
					STATUS = 0
			WHERE article_id = #{articleId}					
		</update>
<!-- 		<delete id="deleteArticleInfo" parameterType="board.boardArticleDto"> -->
<!-- 			DELETE FROM TB_BOARD_ARTICLE WHERE ARTICLE_ID = #{articleId} -->
<!-- 		</delete> -->

		<!-- 우측 게시판 목록 조회 -->
		<select id="selectSideBoardList" resultType="board.sideBoardListDto">
			SELECT 
				   b.board_id
				 , b.board_name
				 , b.board_type
				 , b.create_user_id
				 , b.create_user_name
				 , b.create_date
				 , count(ba.article_id) as boardArticleCnt 
			FROM 			TB_BOARD 			b
			INNER 	JOIN 	TB_BOARD_CATEGORY 	bc ON b.board_category_id = bc.board_category_id
			LEFT 	JOIN 	TB_BOARD_ARTICLE 	ba ON ba.board_id 		  = b.board_id AND ba.status = 1
			GROUP BY b.board_id
			ORDER BY bc.board_category_id ASC, b.board_id DESC
		</select>
    </mapper>